package in.adcast.model;
// Generated 3 Feb, 2018 4:50:11 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Offers generated by hbm2java
 */
@Entity
@Table(name = "offers", catalog = "sme_development")
public class Offers implements java.io.Serializable {

	private Integer id;
	private Branch branch;
	private OfferType offerType;
	private Date startDate;
	private Date endDate;
	private String sendBy;
	private Date reminderNotice;
	private Double offerDiscountPer;
	private Boolean offerSent;
	private boolean offerStatus;
	private Set<CustomerHasOffer> customerHasOffers = new HashSet<CustomerHasOffer>(0);
	private Set<OfferTemplate> offerTemplates = new HashSet<OfferTemplate>(0);
	private Set<FilterCustomerForoffer> filterCustomerForoffers = new HashSet<FilterCustomerForoffer>(0);
	private Set<ClientOffer> clientOffers = new HashSet<ClientOffer>(0);
	private Set<FilterCustomerForoffer> filterCustomerForoffers_1 = new HashSet<FilterCustomerForoffer>(0);
	private Set<ClientOffer> clientOffers_1 = new HashSet<ClientOffer>(0);
	private Set<CustomerHasOffer> customerHasOffers_1 = new HashSet<CustomerHasOffer>(0);
	private Set<OfferTemplate> offerTemplates_1 = new HashSet<OfferTemplate>(0);

	public Offers() {
	}

	public Offers(Branch branch, OfferType offerType, Date startDate, Date endDate, Date reminderNotice,
			boolean offerStatus) {
		this.branch = branch;
		this.offerType = offerType;
		this.startDate = startDate;
		this.endDate = endDate;
		this.reminderNotice = reminderNotice;
		this.offerStatus = offerStatus;
	}

	public Offers(Branch branch, OfferType offerType, Date startDate, Date endDate, String sendBy, Date reminderNotice,
			Double offerDiscountPer, Boolean offerSent, boolean offerStatus, Set<CustomerHasOffer> customerHasOffers,
			Set<OfferTemplate> offerTemplates, Set<FilterCustomerForoffer> filterCustomerForoffers,
			Set<ClientOffer> clientOffers, Set<FilterCustomerForoffer> filterCustomerForoffers_1,
			Set<ClientOffer> clientOffers_1, Set<CustomerHasOffer> customerHasOffers_1,
			Set<OfferTemplate> offerTemplates_1) {
		this.branch = branch;
		this.offerType = offerType;
		this.startDate = startDate;
		this.endDate = endDate;
		this.sendBy = sendBy;
		this.reminderNotice = reminderNotice;
		this.offerDiscountPer = offerDiscountPer;
		this.offerSent = offerSent;
		this.offerStatus = offerStatus;
		this.customerHasOffers = customerHasOffers;
		this.offerTemplates = offerTemplates;
		this.filterCustomerForoffers = filterCustomerForoffers;
		this.clientOffers = clientOffers;
		this.filterCustomerForoffers_1 = filterCustomerForoffers_1;
		this.clientOffers_1 = clientOffers_1;
		this.customerHasOffers_1 = customerHasOffers_1;
		this.offerTemplates_1 = offerTemplates_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "branch_id", nullable = false)
	public Branch getBranch() {
		return this.branch;
	}

	public void setBranch(Branch branch) {
		this.branch = branch;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "offer_type", nullable = false)
	public OfferType getOfferType() {
		return this.offerType;
	}

	public void setOfferType(OfferType offerType) {
		this.offerType = offerType;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "start_date", nullable = false, length = 10)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "end_date", nullable = false, length = 10)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "send_by", length = 10)
	public String getSendBy() {
		return this.sendBy;
	}

	public void setSendBy(String sendBy) {
		this.sendBy = sendBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "reminder_notice", nullable = false, length = 10)
	public Date getReminderNotice() {
		return this.reminderNotice;
	}

	public void setReminderNotice(Date reminderNotice) {
		this.reminderNotice = reminderNotice;
	}

	@Column(name = "offer_discount_per", precision = 22, scale = 0)
	public Double getOfferDiscountPer() {
		return this.offerDiscountPer;
	}

	public void setOfferDiscountPer(Double offerDiscountPer) {
		this.offerDiscountPer = offerDiscountPer;
	}

	@Column(name = "offer_sent")
	public Boolean getOfferSent() {
		return this.offerSent;
	}

	public void setOfferSent(Boolean offerSent) {
		this.offerSent = offerSent;
	}

	@Column(name = "offer_status", nullable = false)
	public boolean isOfferStatus() {
		return this.offerStatus;
	}

	public void setOfferStatus(boolean offerStatus) {
		this.offerStatus = offerStatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "offers")
	public Set<CustomerHasOffer> getCustomerHasOffers() {
		return this.customerHasOffers;
	}

	public void setCustomerHasOffers(Set<CustomerHasOffer> customerHasOffers) {
		this.customerHasOffers = customerHasOffers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "offers")
	public Set<OfferTemplate> getOfferTemplates() {
		return this.offerTemplates;
	}

	public void setOfferTemplates(Set<OfferTemplate> offerTemplates) {
		this.offerTemplates = offerTemplates;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "offers")
	public Set<FilterCustomerForoffer> getFilterCustomerForoffers() {
		return this.filterCustomerForoffers;
	}

	public void setFilterCustomerForoffers(Set<FilterCustomerForoffer> filterCustomerForoffers) {
		this.filterCustomerForoffers = filterCustomerForoffers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "offers")
	public Set<ClientOffer> getClientOffers() {
		return this.clientOffers;
	}

	public void setClientOffers(Set<ClientOffer> clientOffers) {
		this.clientOffers = clientOffers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "offers")
	public Set<FilterCustomerForoffer> getFilterCustomerForoffers_1() {
		return this.filterCustomerForoffers_1;
	}

	public void setFilterCustomerForoffers_1(Set<FilterCustomerForoffer> filterCustomerForoffers_1) {
		this.filterCustomerForoffers_1 = filterCustomerForoffers_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "offers")
	public Set<ClientOffer> getClientOffers_1() {
		return this.clientOffers_1;
	}

	public void setClientOffers_1(Set<ClientOffer> clientOffers_1) {
		this.clientOffers_1 = clientOffers_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "offers")
	public Set<CustomerHasOffer> getCustomerHasOffers_1() {
		return this.customerHasOffers_1;
	}

	public void setCustomerHasOffers_1(Set<CustomerHasOffer> customerHasOffers_1) {
		this.customerHasOffers_1 = customerHasOffers_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "offers")
	public Set<OfferTemplate> getOfferTemplates_1() {
		return this.offerTemplates_1;
	}

	public void setOfferTemplates_1(Set<OfferTemplate> offerTemplates_1) {
		this.offerTemplates_1 = offerTemplates_1;
	}

}
