package in.adcast.model;
// Generated 3 Feb, 2018 4:50:11 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * ApplicationUser generated by hbm2java
 */
@Entity
@Table(name = "application_user", catalog = "sme_development", uniqueConstraints = @UniqueConstraint(columnNames = "login_Id"))
public class ApplicationUser implements java.io.Serializable {

	private Integer id;
	private Organisation organisation;
	private String firstName;
	private String lastName;
	private String password;
	private String resetPassword;
	private Date resetPassValidity;
	private String emailId;
	private String loginId;
	private String mobile;
	private Date lastLogin;
	private Integer individual;
	private String confirmationToken;
	private Integer userStatus;
	private Integer userPermission;
	private Integer profileCompletion;
	private String uniqueId;
	private String firebaseId;
	private Date startDate;
	private Date finishDate;
	private String address1;
	private String address2;
	private String city;
	private String state;
	private String pincode;
	private Set<StaffSchedule> staffSchedules = new HashSet<StaffSchedule>(0);
	private Set<ApplicationSession> applicationSessions = new HashSet<ApplicationSession>(0);
	private Set<SubOrder> subOrders = new HashSet<SubOrder>(0);
	private Set<ApplicationSession> applicationSessions_1 = new HashSet<ApplicationSession>(0);
	private Set<Role> roles = new HashSet<Role>(0);
	private Set<StaffSchedule> staffSchedules_1 = new HashSet<StaffSchedule>(0);
	private Set<SubOrder> subOrders_1 = new HashSet<SubOrder>(0);
	private Set<Role> roles_1 = new HashSet<Role>(0);

	public ApplicationUser() {
	}

	public ApplicationUser(Organisation organisation, String firstName, String lastName, String password,
			String resetPassword, Date resetPassValidity, String emailId, String loginId, String mobile, Date lastLogin,
			Integer individual, String confirmationToken, Integer userStatus, Integer userPermission,
			Integer profileCompletion, String uniqueId, String firebaseId, Date startDate, Date finishDate,
			String address1, String address2, String city, String state, String pincode,
			Set<StaffSchedule> staffSchedules, Set<ApplicationSession> applicationSessions, Set<SubOrder> subOrders,
			Set<ApplicationSession> applicationSessions_1, Set<Role> roles, Set<StaffSchedule> staffSchedules_1,
			Set<SubOrder> subOrders_1, Set<Role> roles_1) {
		this.organisation = organisation;
		this.firstName = firstName;
		this.lastName = lastName;
		this.password = password;
		this.resetPassword = resetPassword;
		this.resetPassValidity = resetPassValidity;
		this.emailId = emailId;
		this.loginId = loginId;
		this.mobile = mobile;
		this.lastLogin = lastLogin;
		this.individual = individual;
		this.confirmationToken = confirmationToken;
		this.userStatus = userStatus;
		this.userPermission = userPermission;
		this.profileCompletion = profileCompletion;
		this.uniqueId = uniqueId;
		this.firebaseId = firebaseId;
		this.startDate = startDate;
		this.finishDate = finishDate;
		this.address1 = address1;
		this.address2 = address2;
		this.city = city;
		this.state = state;
		this.pincode = pincode;
		this.staffSchedules = staffSchedules;
		this.applicationSessions = applicationSessions;
		this.subOrders = subOrders;
		this.applicationSessions_1 = applicationSessions_1;
		this.roles = roles;
		this.staffSchedules_1 = staffSchedules_1;
		this.subOrders_1 = subOrders_1;
		this.roles_1 = roles_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "organisation_id")
	public Organisation getOrganisation() {
		return this.organisation;
	}

	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	@Column(name = "first_name", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "lastName", length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "password", length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "reset_password", length = 45)
	public String getResetPassword() {
		return this.resetPassword;
	}

	public void setResetPassword(String resetPassword) {
		this.resetPassword = resetPassword;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "reset_pass_validity", length = 19)
	public Date getResetPassValidity() {
		return this.resetPassValidity;
	}

	public void setResetPassValidity(Date resetPassValidity) {
		this.resetPassValidity = resetPassValidity;
	}

	@Column(name = "email_Id", length = 45)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "login_Id", unique = true, length = 45)
	public String getLoginId() {
		return this.loginId;
	}

	public void setLoginId(String loginId) {
		this.loginId = loginId;
	}

	@Column(name = "mobile", length = 45)
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastLogin", length = 19)
	public Date getLastLogin() {
		return this.lastLogin;
	}

	public void setLastLogin(Date lastLogin) {
		this.lastLogin = lastLogin;
	}

	@Column(name = "individual")
	public Integer getIndividual() {
		return this.individual;
	}

	public void setIndividual(Integer individual) {
		this.individual = individual;
	}

	@Column(name = "confirmation_token")
	public String getConfirmationToken() {
		return this.confirmationToken;
	}

	public void setConfirmationToken(String confirmationToken) {
		this.confirmationToken = confirmationToken;
	}

	@Column(name = "user_status")
	public Integer getUserStatus() {
		return this.userStatus;
	}

	public void setUserStatus(Integer userStatus) {
		this.userStatus = userStatus;
	}

	@Column(name = "user_permission")
	public Integer getUserPermission() {
		return this.userPermission;
	}

	public void setUserPermission(Integer userPermission) {
		this.userPermission = userPermission;
	}

	@Column(name = "profile_completion")
	public Integer getProfileCompletion() {
		return this.profileCompletion;
	}

	public void setProfileCompletion(Integer profileCompletion) {
		this.profileCompletion = profileCompletion;
	}

	@Column(name = "uniqueId", length = 36)
	public String getUniqueId() {
		return this.uniqueId;
	}

	public void setUniqueId(String uniqueId) {
		this.uniqueId = uniqueId;
	}

	@Column(name = "firebaseId", length = 250)
	public String getFirebaseId() {
		return this.firebaseId;
	}

	public void setFirebaseId(String firebaseId) {
		this.firebaseId = firebaseId;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "start_date", length = 10)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "finish_date", length = 10)
	public Date getFinishDate() {
		return this.finishDate;
	}

	public void setFinishDate(Date finishDate) {
		this.finishDate = finishDate;
	}

	@Column(name = "address1", length = 45)
	public String getAddress1() {
		return this.address1;
	}

	public void setAddress1(String address1) {
		this.address1 = address1;
	}

	@Column(name = "address2", length = 45)
	public String getAddress2() {
		return this.address2;
	}

	public void setAddress2(String address2) {
		this.address2 = address2;
	}

	@Column(name = "city", length = 45)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "state", length = 45)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "pincode", length = 6)
	public String getPincode() {
		return this.pincode;
	}

	public void setPincode(String pincode) {
		this.pincode = pincode;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "applicationUser")
	public Set<StaffSchedule> getStaffSchedules() {
		return this.staffSchedules;
	}

	public void setStaffSchedules(Set<StaffSchedule> staffSchedules) {
		this.staffSchedules = staffSchedules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "applicationUser")
	public Set<ApplicationSession> getApplicationSessions() {
		return this.applicationSessions;
	}

	public void setApplicationSessions(Set<ApplicationSession> applicationSessions) {
		this.applicationSessions = applicationSessions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "applicationUser")
	public Set<SubOrder> getSubOrders() {
		return this.subOrders;
	}

	public void setSubOrders(Set<SubOrder> subOrders) {
		this.subOrders = subOrders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "applicationUser")
	public Set<ApplicationSession> getApplicationSessions_1() {
		return this.applicationSessions_1;
	}

	public void setApplicationSessions_1(Set<ApplicationSession> applicationSessions_1) {
		this.applicationSessions_1 = applicationSessions_1;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_has_role", catalog = "sme_development", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "role_id", nullable = false, updatable = false) })
	public Set<Role> getRoles() {
		return this.roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "applicationUser")
	public Set<StaffSchedule> getStaffSchedules_1() {
		return this.staffSchedules_1;
	}

	public void setStaffSchedules_1(Set<StaffSchedule> staffSchedules_1) {
		this.staffSchedules_1 = staffSchedules_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "applicationUser")
	public Set<SubOrder> getSubOrders_1() {
		return this.subOrders_1;
	}

	public void setSubOrders_1(Set<SubOrder> subOrders_1) {
		this.subOrders_1 = subOrders_1;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_has_role", catalog = "sme_development", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "role_id", nullable = false, updatable = false) })
	public Set<Role> getRoles_1() {
		return this.roles_1;
	}

	public void setRoles_1(Set<Role> roles_1) {
		this.roles_1 = roles_1;
	}

}
