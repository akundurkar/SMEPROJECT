package in.adcast.model;
// Generated 3 Feb, 2018 4:50:11 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Client generated by hbm2java
 */
@Entity
@Table(name = "client", catalog = "sme_development")
public class Client implements java.io.Serializable {

	private Integer id;
	private Organisation organisation;
	private String firstName;
	private String lastName;
	private String emailId;
	private String mobile;
	private String telephone;
	private Integer notificationSubscriptionType;
	private String gender;
	private Date dob;
	private String adress1;
	private String adress2;
	private String city;
	private String state;
	private String country;
	private String pincode;
	private String confirmationToken;
	private Integer profileCompletion;
	private String firebaseId;
	private Boolean maritalStatus;
	private Set<ClientOrder> clientOrders = new HashSet<ClientOrder>(0);
	private Set<CustomerHasOffer> customerHasOffers = new HashSet<CustomerHasOffer>(0);
	private Set<ClientOffer> clientOffers = new HashSet<ClientOffer>(0);
	private Set<ClientOffer> clientOffers_1 = new HashSet<ClientOffer>(0);
	private Set<FeedbackSubdata> feedbackSubdatas = new HashSet<FeedbackSubdata>(0);
	private Set<ClientOrder> clientOrders_1 = new HashSet<ClientOrder>(0);
	private Set<FeedbackSubdata> feedbackSubdatas_1 = new HashSet<FeedbackSubdata>(0);
	private Set<CustomerHasOffer> customerHasOffers_1 = new HashSet<CustomerHasOffer>(0);

	public Client() {
	}

	public Client(Organisation organisation) {
		this.organisation = organisation;
	}

	public Client(Organisation organisation, String firstName, String lastName, String emailId, String mobile,
			String telephone, Integer notificationSubscriptionType, String gender, Date dob, String adress1,
			String adress2, String city, String state, String country, String pincode, String confirmationToken,
			Integer profileCompletion, String firebaseId, Boolean maritalStatus, Set<ClientOrder> clientOrders,
			Set<CustomerHasOffer> customerHasOffers, Set<ClientOffer> clientOffers, Set<ClientOffer> clientOffers_1,
			Set<FeedbackSubdata> feedbackSubdatas, Set<ClientOrder> clientOrders_1,
			Set<FeedbackSubdata> feedbackSubdatas_1, Set<CustomerHasOffer> customerHasOffers_1) {
		this.organisation = organisation;
		this.firstName = firstName;
		this.lastName = lastName;
		this.emailId = emailId;
		this.mobile = mobile;
		this.telephone = telephone;
		this.notificationSubscriptionType = notificationSubscriptionType;
		this.gender = gender;
		this.dob = dob;
		this.adress1 = adress1;
		this.adress2 = adress2;
		this.city = city;
		this.state = state;
		this.country = country;
		this.pincode = pincode;
		this.confirmationToken = confirmationToken;
		this.profileCompletion = profileCompletion;
		this.firebaseId = firebaseId;
		this.maritalStatus = maritalStatus;
		this.clientOrders = clientOrders;
		this.customerHasOffers = customerHasOffers;
		this.clientOffers = clientOffers;
		this.clientOffers_1 = clientOffers_1;
		this.feedbackSubdatas = feedbackSubdatas;
		this.clientOrders_1 = clientOrders_1;
		this.feedbackSubdatas_1 = feedbackSubdatas_1;
		this.customerHasOffers_1 = customerHasOffers_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "organisation_id", nullable = false)
	public Organisation getOrganisation() {
		return this.organisation;
	}

	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	@Column(name = "first_name", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "lastName", length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "email_Id", length = 45)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "mobile", length = 45)
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Column(name = "telephone", length = 45)
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "notification_subscription_type")
	public Integer getNotificationSubscriptionType() {
		return this.notificationSubscriptionType;
	}

	public void setNotificationSubscriptionType(Integer notificationSubscriptionType) {
		this.notificationSubscriptionType = notificationSubscriptionType;
	}

	@Column(name = "gender", length = 1)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dob", length = 10)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "adress1", length = 45)
	public String getAdress1() {
		return this.adress1;
	}

	public void setAdress1(String adress1) {
		this.adress1 = adress1;
	}

	@Column(name = "adress2", length = 45)
	public String getAdress2() {
		return this.adress2;
	}

	public void setAdress2(String adress2) {
		this.adress2 = adress2;
	}

	@Column(name = "city", length = 45)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "state", length = 45)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "country", length = 30)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "pincode", length = 6)
	public String getPincode() {
		return this.pincode;
	}

	public void setPincode(String pincode) {
		this.pincode = pincode;
	}

	@Column(name = "confirmation_token")
	public String getConfirmationToken() {
		return this.confirmationToken;
	}

	public void setConfirmationToken(String confirmationToken) {
		this.confirmationToken = confirmationToken;
	}

	@Column(name = "profile_completion")
	public Integer getProfileCompletion() {
		return this.profileCompletion;
	}

	public void setProfileCompletion(Integer profileCompletion) {
		this.profileCompletion = profileCompletion;
	}

	@Column(name = "firebaseId", length = 250)
	public String getFirebaseId() {
		return this.firebaseId;
	}

	public void setFirebaseId(String firebaseId) {
		this.firebaseId = firebaseId;
	}

	@Column(name = "marital_status")
	public Boolean getMaritalStatus() {
		return this.maritalStatus;
	}

	public void setMaritalStatus(Boolean maritalStatus) {
		this.maritalStatus = maritalStatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<ClientOrder> getClientOrders() {
		return this.clientOrders;
	}

	public void setClientOrders(Set<ClientOrder> clientOrders) {
		this.clientOrders = clientOrders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<CustomerHasOffer> getCustomerHasOffers() {
		return this.customerHasOffers;
	}

	public void setCustomerHasOffers(Set<CustomerHasOffer> customerHasOffers) {
		this.customerHasOffers = customerHasOffers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<ClientOffer> getClientOffers() {
		return this.clientOffers;
	}

	public void setClientOffers(Set<ClientOffer> clientOffers) {
		this.clientOffers = clientOffers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<ClientOffer> getClientOffers_1() {
		return this.clientOffers_1;
	}

	public void setClientOffers_1(Set<ClientOffer> clientOffers_1) {
		this.clientOffers_1 = clientOffers_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<FeedbackSubdata> getFeedbackSubdatas() {
		return this.feedbackSubdatas;
	}

	public void setFeedbackSubdatas(Set<FeedbackSubdata> feedbackSubdatas) {
		this.feedbackSubdatas = feedbackSubdatas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<ClientOrder> getClientOrders_1() {
		return this.clientOrders_1;
	}

	public void setClientOrders_1(Set<ClientOrder> clientOrders_1) {
		this.clientOrders_1 = clientOrders_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<FeedbackSubdata> getFeedbackSubdatas_1() {
		return this.feedbackSubdatas_1;
	}

	public void setFeedbackSubdatas_1(Set<FeedbackSubdata> feedbackSubdatas_1) {
		this.feedbackSubdatas_1 = feedbackSubdatas_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<CustomerHasOffer> getCustomerHasOffers_1() {
		return this.customerHasOffers_1;
	}

	public void setCustomerHasOffers_1(Set<CustomerHasOffer> customerHasOffers_1) {
		this.customerHasOffers_1 = customerHasOffers_1;
	}

}
